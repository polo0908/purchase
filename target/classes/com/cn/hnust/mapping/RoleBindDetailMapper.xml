<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.RoleBindDetailMapper">
	<resultMap id="BaseResultMap" type="com.cn.hnust.pojo.RoleBindDetail">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="parent_id" property="parentId" jdbcType="INTEGER" />
		<result column="role_type" property="roleType" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<!-- 虚拟字段 -->
		<result column="project_no" property="projectNo" jdbcType="VARCHAR" />
		<result column="task_title" property="taskTitle" jdbcType="VARCHAR" />
		<result column="task_id" property="taskId" jdbcType="INTEGER" />
		<result column="index_num" property="indexNum" jdbcType="INTEGER" />

	</resultMap>
	<sql id="Base_Column_List">
		id, parent_id, role_type, role_name, user_id, user_name
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from role_bind_detail
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="selectByParentId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role_bind_detail
		where 1=1
		<if test="parentId!=null">
			and parent_id = #{parentId,jdbcType=INTEGER}
		</if>
	</select>



	<select id="selectAllDetail" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from role_bind_detail

	</select>

    
    <select id="selectConditionFirst" resultMap="BaseResultMap">
    SELECT
		c.*, b.project_no,
		d.task_title,
		d.task_id
		FROM
		role_bind_detail c,
		project b,
		(
		SELECT
		l.id task_id,
		l.*, j.role_type,
		j.task_title
		FROM
		task_flow l
		LEFT JOIN trigger_task j ON l.trigger_id = j.id
		WHERE
		l.condition_type = 4
		) d
		where 1=1
		and c.role_type = d.role_type
		and b.trigger_flag_1 = 0
		and b.project_material_properties = d.project_material_properties
		and b.plant_analysis = d.plant_analysis
	</select>
	
	
	

	<select id="selectCondition" resultMap="BaseResultMap">
		SELECT
		c.*, b.project_no,
		d.task_title,
		d.task_id
		FROM
		role_bind_detail c,
		project b,
		(
		SELECT
		l.id task_id,
		l.*, j.role_type,
		j.task_title
		FROM
		task_flow l
		LEFT JOIN trigger_task j ON l.trigger_id = j.id
		WHERE
		l.condition_type = 1
		) d
		where 1=1
		<if test="hasEmailUserId">
			and b.email_user_id!=0
		</if>
		<if test="hasPurchaseId">
			and b.purchase_id!=0
		</if>
	
		and c.role_type = d.role_type
		and b.trigger_flag = 0
		and b.project_material_properties = d.project_material_properties
		and b.plant_analysis = d.plant_analysis
	</select>


	<select id="selectMeetingStatus" resultMap="BaseResultMap">
		select
		c.*,b.project_no,d.task_title,d.task_id from
		role_bind_detail c,
		meeting_record b,
		(select l.id task_id,l.*,j.role_type,j.task_title
		from task_flow l
		LEFT JOIN trigger_task j on l.trigger_id = j.id where
		l.condition_type=#{conditionType,jdbcType=INTEGER})d,
        project e
		where 1=1
		and c.role_type =d.role_type
		and
		b.meeting_name=#{meetingName,jdbcType=VARCHAR}
		and b.trigger_flag = 0
		and e.project_no = b.project_no
	</select>


	<select id="checkNextTask" resultMap="BaseResultMap">
		select
		a.project_no,a.task_id,c.index_num,d.* from
		project_task a,task_flow
		b,task_flow_detail c,trigger_task d
		where a.task_id=b.id and
		c.parent_id=b.id and c.index_num=#{indexNum,jdbcType=INTEGER}
		and
		c.trigger_id = d.id
		and a.id=#{id,jdbcType=INTEGER}
		and a.task_status=0
	</select>

	<select id="selectListByRoleType" resultMap="BaseResultMap">
		select * from
		role_bind_detail where role_type=#{roleType,jdbcType=INTEGER}
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		role_bind_detail
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteByParentId">
		delete from
		role_bind_detail
		where parent_id =
		#{parentId,jdbcType=INTEGER}

	</delete>

	<delete id="deleteAllDetail">
		delete from
		role_bind_detail


	</delete>


	<insert id="insert" parameterType="com.cn.hnust.pojo.RoleBindDetail">
		insert into role_bind_detail
		(id, parent_id, role_type,
		role_name, user_id, user_name
		)
		values
		(#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER},
		#{roleType,jdbcType=INTEGER},
		#{roleName,jdbcType=VARCHAR},
		#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}
		)
	</insert>





	<insert id="insertSelective" parameterType="com.cn.hnust.pojo.RoleBindDetail">
		insert into role_bind_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="parentId != null">
				parent_id,
			</if>
			<if test="roleType != null">
				role_type,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="parentId != null">
				#{parentId,jdbcType=INTEGER},
			</if>
			<if test="roleType != null">
				#{roleType,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>


	<insert id="insertList" parameterType="java.util.List">

		insert into role_bind_detail ( parent_id, role_type,
		role_name,
		user_id, user_name) values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.parentId,jdbcType=INTEGER},
			#{item.roleType,jdbcType=INTEGER},
			#{item.roleName,jdbcType=VARCHAR},
			#{item.userId,jdbcType=INTEGER},
			#{item.userName,jdbcType=VARCHAR})
		</foreach>
	</insert>






	<update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.RoleBindDetail">
		update role_bind_detail
		<set>
			<if test="parentId != null">
				parent_id = #{parentId,jdbcType=INTEGER},
			</if>
			<if test="roleType != null">
				role_type = #{roleType,jdbcType=INTEGER},
			</if>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.RoleBindDetail">
		update
		role_bind_detail
		set parent_id = #{parentId,jdbcType=INTEGER},
		role_type = #{roleType,jdbcType=INTEGER},
		role_name =
		#{roleName,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=INTEGER},
		user_name = #{userName,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
</mapper>