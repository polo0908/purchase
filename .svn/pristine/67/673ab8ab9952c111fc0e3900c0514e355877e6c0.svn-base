<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.InspectionReservationMapper" >
  <resultMap id="BaseResultMap" type="com.cn.hnust.pojo.InspectionReservation" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="project_no_id" property="projectNoId" jdbcType="VARCHAR" />
    <result column="project_no" property="projectNo" jdbcType="VARCHAR" />
    <result column="initiator" property="initiator" jdbcType="VARCHAR" />
    <result column="accepter" property="accepter" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="urgent_reason" property="urgentReason" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="produce_status" property="produceStatus" jdbcType="VARCHAR" />
    <result column="finish_time" property="finishTime" jdbcType="TIMESTAMP" />
    <result column="expected_delivery" property="expectedDelivery" jdbcType="TIMESTAMP" />
    <result column="shipping_date" property="shippingDate" jdbcType="TIMESTAMP" />
    <result column="projectTaskId" property="projectTaskId" jdbcType="INTEGER"/>
    <result column="task_status" property="taskStatus" jdbcType="VARCHAR"/>
    <result column="operator_time" property="operatorTime" jdbcType="TIMESTAMP"/>
    <result column="operator" property="operator" jdbcType="VARCHAR"/>
    <result column="quality_date" property="qualityDate" jdbcType="TIMESTAMP"/>
    <result column="inspection_address" property="inspectionAddress" jdbcType="VARCHAR"/>
    <result column="test_type" property="testType" jdbcType="VARCHAR"/>
    <result column="shipping_approval" property="shippingApproval" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR"/>
    <result column="open_rate" property="openRate" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Base_Column_List" >
    id, project_no_id, project_no, initiator, accepter, description, urgent_reason, create_date, 
    produce_status, finish_time, expected_delivery, shipping_date,quality_date,inspection_address,test_type,
    shipping_approval,open_rate 
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from inspection_reservation
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectInspectionReservationById" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from inspection_reservation
    where project_no_id = #{projectNoId,jdbcType=VARCHAR}
  </select>
  
  
  <select id="selectInspectionList" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from inspection_reservation
    where project_no = #{projectNo,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from inspection_reservation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <!-- 验货任务列表 -->
  <select id="selectInspectionReservation" resultMap="BaseResultMap" parameterType="com.cn.hnust.pojo.InspectionReservation">
    select ir.*,pt.operator_time,pt.operator,pt.task_status ,pt.id as projectTaskId,p.project_name from inspection_reservation ir 
    LEFT JOIN project_task pt on 
    ir.project_no_id=pt.project_no_id  
    LEFT JOIN project p on ir.project_no = p.project_no  
    where 1=1 
    <if test="inputKey !=null and inputKey!=''"> 
	AND (ir.project_no like CONCAT('%',#{inputKey},'%')
	     OR ir.inspection_address like CONCAT('%',#{inputKey},'%')
		 OR ir.initiator like CONCAT('%',#{inputKey},'%') 
		 OR ir.accepter like CONCAT('%',#{inputKey},'%') 
		 OR pt.operator like CONCAT('%',#{inputKey},'%')
		 )
    </if>
    <if test="qualityName !=null and qualityName!=''"> 
	 AND ir.accepter like CONCAT('%', #{qualityName}, '%') 
	</if>
	<if test="userName !=null and userName!=''"> 
	 AND (
		    ir.initiator like CONCAT('%', #{userName}, '%') 
		 OR ir.accepter like CONCAT('%', #{userName}, '%') 
		 OR pt.operator like CONCAT('%', #{userName}, '%')
		 )
	</if>
	<if test="taskStatus!=null and taskStatus!=''">
		<choose>
		   <when test="taskStatus == '-1'.toString()">
				AND pt.task_status in(0,1,2,3)
			</when>
			<otherwise>
				AND pt.task_status=#{taskStatus,jdbcType=VARCHAR}
			</otherwise>
		</choose>	
    </if>
    
    <!-- 根据质检名筛选 -->
    <if test="qualityNames != null and qualityNames!=''">
       AND (   ir.initiator in 
             <foreach collection="qualityNames" item="item" index="index"  open="(" close=")" separator=",">
		      (           
			    #{item}
		      )
		    </foreach>
		  OR ir.accepter in 
		     <foreach collection="qualityNames" item="item" index="index"  open="(" close=")" separator=",">
		      (           
			    #{item}
		      )
		    </foreach>
		  OR pt.operator in  
		     <foreach collection="qualityNames" item="item" index="index"  open="(" close=")" separator=",">
		      (           
			    #{item}
		      )
		    </foreach>    
         )
    </if>
    
    <!-- 根据有无出货单筛选查询 -->
    <if test="shippingApproval !=null and shippingApproval == 1"> 
	   AND ir.shipping_approval = #{shippingApproval,jdbcType=INTEGER}  
	</if>
	<if test="shippingApproval !=null and shippingApproval == 0"> 
	   AND (ir.shipping_approval = #{shippingApproval,jdbcType=INTEGER} or ir.shipping_approval is null) 
	</if>	
    order by finish_time desc   
    <if test="pageNumber != null">   
    limit #{pageNumber},#{pageSize}
    </if>
  </select>
  
  <!-- 验货任务列表 -->
  <select id="selectInspectionReservationCount" resultType="java.lang.Integer" parameterType="com.cn.hnust.pojo.InspectionReservation">
    select count(1) from inspection_reservation ir LEFT JOIN project_task pt on 
    ir.project_no_id=pt.project_no_id  where 1=1 
    <if test="inputKey !=null and inputKey!=''"> 
	AND (ir.project_no like CONCAT('%',#{inputKey},'%')
	     OR ir.inspection_address like CONCAT('%',#{inputKey},'%')
		 OR ir.initiator like CONCAT('%',#{inputKey},'%') 
		 OR ir.accepter like CONCAT('%',#{inputKey},'%') 
		 OR pt.operator like CONCAT('%',#{inputKey},'%')
		 )
    </if>
    <if test="qualityName !=null and qualityName!=''"> 
	 AND ir.accepter like CONCAT('%', #{qualityName}, '%')
	</if>
	<if test="userName !=null and userName!=''"> 
	 AND (
		    ir.initiator like CONCAT('%', #{userName}, '%') 
		 OR ir.accepter like CONCAT('%', #{userName}, '%') 
		 OR pt.operator like CONCAT('%', #{userName}, '%')
		 )
	</if>
	
	<if test="taskStatus!=null and taskStatus!=''">
		<choose>
		   <when test="taskStatus == '-1'.toString()">
				AND pt.task_status in(0,1,2,3)
			</when>
			<otherwise>
				AND pt.task_status=#{taskStatus,jdbcType=VARCHAR}
			</otherwise>
		</choose>	
    </if>
    
        <!-- 根据质检名筛选 -->
    <if test="qualityNames != null and qualityNames!=''">
     AND (   ir.initiator in 
             <foreach collection="qualityNames" item="item" index="index"  open="(" close=")" separator=",">
		      (           
			    #{item}
		      )
		    </foreach>
		  OR ir.accepter in 
		     <foreach collection="qualityNames" item="item" index="index"  open="(" close=")" separator=",">
		      (           
			    #{item}
		      )
		    </foreach>
		  OR pt.operator in  
		     <foreach collection="qualityNames" item="item" index="index"  open="(" close=")" separator=",">
		      (           
			    #{item}
		      )
		    </foreach>    
         )
    </if>
    
    <!-- 根据有无出货单筛选查询 -->
    <if test="shippingApproval !=null and shippingApproval == 1"> 
	   AND ir.shipping_approval = #{shippingApproval,jdbcType=INTEGER}  
	</if>
	<if test="shippingApproval !=null and shippingApproval == 0"> 
	   AND (ir.shipping_approval = #{shippingApproval,jdbcType=INTEGER} or ir.shipping_approval is null) 
	</if>
    
  </select>
  
  <select id="selectInspectionReservationByNo" resultMap="BaseResultMap" parameterType="java.lang.String">
   select *from inspection_reservation where 1=1 
   <if test="projectNo !=null and projectNo !=''">
    AND  project_no = #{projectNo,jdbcType=VARCHAR}
   </if>
   ORDER BY create_date DESC LIMIT 1
  </select>
  
  <insert id="insert" parameterType="com.cn.hnust.pojo.InspectionReservation" >
    insert into inspection_reservation (id, project_no_id, project_no, 
      initiator, accepter, description, 
      urgent_reason, create_date, produce_status, 
      finish_time, expected_delivery, shipping_date
      )
    values (#{id,jdbcType=INTEGER}, #{projectNoId,jdbcType=VARCHAR}, #{projectNo,jdbcType=VARCHAR}, 
      #{initiator,jdbcType=VARCHAR}, #{accepter,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{urgentReason,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{produceStatus,jdbcType=VARCHAR}, 
      #{finishTime,jdbcType=TIMESTAMP}, #{expectedDelivery,jdbcType=TIMESTAMP}, #{shippingDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cn.hnust.pojo.InspectionReservation" >
    insert into inspection_reservation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="projectNoId != null" >
        project_no_id,
      </if>
      <if test="projectNo != null" >
        project_no,
      </if>
      <if test="initiator != null" >
        initiator,
      </if>
      <if test="accepter != null" >
        accepter,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="urgentReason != null" >
        urgent_reason,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="produceStatus != null" >
        produce_status,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="expectedDelivery != null" >
        expected_delivery,
      </if>
      <if test="shippingDate != null" >
        shipping_date,
      </if>
      <if test="qualityDate !=null">
        quality_date,
      </if>
      <if test="inspectionAddress !=null">
         inspection_address,
      </if>
      <if test="testType !=null">
         test_type,
      </if>
     <if test="shippingApproval != null" >
        shipping_approval,
       </if>
     <if test="openRate != null" >
        open_rate,
       </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectNoId != null" >
        #{projectNoId,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null" >
        #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="initiator != null" >
        #{initiator,jdbcType=VARCHAR},
      </if>
      <if test="accepter != null" >
        #{accepter,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="urgentReason != null" >
        #{urgentReason,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="produceStatus != null" >
        #{produceStatus,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expectedDelivery != null" >
        #{expectedDelivery,jdbcType=TIMESTAMP},
      </if>
      <if test="shippingDate != null" >
        #{shippingDate,jdbcType=TIMESTAMP},
      </if>
      <if test="qualityDate !=null">
        #{qualityDate,jdbcType=TIMESTAMP},
      </if>
      <if test="inspectionAddress !=null">
        #{inspectionAddress,jdbcType=VARCHAR},
      </if>
      <if test="testType !=null">
        #{testType,jdbcType=VARCHAR},
      </if>
      <if test="shippingApproval != null" >
       #{shippingApproval,jdbcType=INTEGER},
       </if>
      <if test="openRate != null" >
       #{openRate,jdbcType=VARCHAR},
       </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.InspectionReservation" >
    update inspection_reservation
    <set >
      <if test="projectNoId != null" >
        project_no_id = #{projectNoId,jdbcType=VARCHAR},
      </if>
      <if test="projectNo != null" >
        project_no = #{projectNo,jdbcType=VARCHAR},
      </if>
      <if test="initiator != null" >
        initiator = #{initiator,jdbcType=VARCHAR},
      </if>
      <if test="accepter != null" >
        accepter = #{accepter,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="urgentReason != null" >
        urgent_reason = #{urgentReason,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="produceStatus != null" >
        produce_status = #{produceStatus,jdbcType=VARCHAR},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expectedDelivery != null" >
        expected_delivery = #{expectedDelivery,jdbcType=TIMESTAMP},
      </if>
      <if test="shippingDate != null" >
        shipping_date = #{shippingDate,jdbcType=TIMESTAMP},
      </if>
       <if test="qualityDate !=null">
        quality_date=#{qualityDate,jdbcType=TIMESTAMP},
      </if>
	   <if test="shippingApproval !=null">
		  shipping_approval=#{shippingApproval,jdbcType=INTEGER},
		</if>
	   <if test="openRate !=null">
		  open_rate=#{openRate,jdbcType=VARCHAR},
		</if>
    </set>
    where project_no_id = #{projectNoId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.InspectionReservation" >
    update inspection_reservation
    set project_no_id = #{projectNoId,jdbcType=VARCHAR},
      project_no = #{projectNo,jdbcType=VARCHAR},
      initiator = #{initiator,jdbcType=VARCHAR},
      accepter = #{accepter,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      urgent_reason = #{urgentReason,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      produce_status = #{produceStatus,jdbcType=VARCHAR},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      expected_delivery = #{expectedDelivery,jdbcType=TIMESTAMP},
      shipping_date = #{shippingDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>