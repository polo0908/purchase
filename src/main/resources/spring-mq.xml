<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
    http://www.springframework.org/schema/rabbit
    http://www.springframework.org/schema/rabbit/spring-rabbit-1.0.xsd" >

	<description>rabbitmq 连接服务配置</description>

	<!-- 连接配置 -->
	<rabbit:connection-factory id="connectionFactory" host="${mq.host}" username="${mq.username}" password="${mq.password}" port="${mq.port}"/>
	<rabbit:admin connection-factory="connectionFactory"/>

	<!-- spring template声明-->
	<rabbit:template exchange="order-exchange" id="amqpTemplate"  connection-factory="connectionFactory"  message-converter="jsonMessageConverter" />

	<!-- 消息对象json转换类 -->
	<bean id="jsonMessageConverter" class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter" />
	<!--<bean id="rabbitMqConsumerListener" class="com.cbt.mq.RabbitMqConsumerListener" />-->
	<!--
        durable:是否持久化

        exclusive: 仅创建者可以使用的私有队列，断开后自动删除

        auto_delete: 当所有消费客户端连接断开后，是否自动删除队列
     -->

	<!--  申明一个消息队列Queue   -->
	<rabbit:queue id="order" name="order" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="activity" name="activity" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="quality" name="quality" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="qualityDelete" name="qualityDelete" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="stock" name="stock" durable="true" auto-delete="false" exclusive="false" />
	<rabbit:queue id="meeting" name="meeting" durable="true" auto-delete="false" exclusive="false" />
	<!--
     rabbit:direct-exchange：定义exchange模式为direct，意思就是消息与一个特定的路由键完全匹配，才会转发。 

    rabbit:binding：设置消息queue匹配的key
     -->
	<!-- 交换机定义 -->
	<rabbit:direct-exchange name="order-exchange" durable="true" auto-delete="false" id="order-exchange">
		<rabbit:bindings>
<!-- 			<rabbit:binding queue="mail" key="mail"/> -->
			<rabbit:binding queue="quality" key="quality"/>
			<rabbit:binding queue="meeting" key="meeting"/>
			<rabbit:binding queue="qualityDelete" key="qualityDelete"/>
		</rabbit:bindings>
	</rabbit:direct-exchange>

	<!--
        queues：监听的队列，多个的话用逗号（,）分隔
        ref：监听器
     -->
	<!-- 配置监听acknowledeg="manual"设置手动应答，它能够保证即使在一个worker处理消息的时候用CTRL+C来杀掉这个worker，或者一个consumer挂了(channel关闭了、connection关闭了或者TCP连接断了)，也不会丢失消息。因为RabbitMQ知道没发送ack确认消息导致这个消息没有被完全处理，将会对这条消息做re-queue处理。如果此时有另一个consumer连接，消息会被重新发送至另一个consumer会一直重发,直到消息处理成功,监听容器acknowledge="auto" concurrency="3"设置发送次数,最多发送3次 -->
	<!--<rabbit:listener-container connection-factory="connectionFactory" acknowledge="auto" concurrency="3">-->
		<!--&lt;!&ndash; 配置监听器 &ndash;&gt;-->
		<!--<rabbit:listener queues="mail" ref="rabbitMqConsumerListener"/>-->
	<!--</rabbit:listener-container>-->
</beans>